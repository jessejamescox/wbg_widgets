<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 500" id="electrical-meter">
  <defs>
    <style>
      .meter-bg { fill: #f5f7fa; stroke: #16213e; stroke-width: 2; }
      .title-text { fill: #1976d2; font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; }
      .label-text { fill: #546e7a; font-family: Arial, sans-serif; font-size: 12px; }
      .value-text { fill: #1976d2; font-family: 'Courier New', monospace; font-size: 20px; font-weight: bold; }
      .unit-text { fill: #546e7a; font-family: Arial, sans-serif; font-size: 14px; }
      .status-ok { fill: #00ff00; }
      .status-warning { fill: #ffaa00; }
      .status-alarm { fill: #ff0000; }
      .gauge-bg { fill: none; stroke: #333; stroke-width: 8; }
      .gauge-fill { fill: none; stroke: #1976d2; stroke-width: 8; stroke-linecap: round; }
      .demand-indicator { fill: #ff6b00; }
    </style>
  </defs>

  <!-- Background -->
  <rect class="meter-bg" x="10" y="10" width="380" height="480" rx="10"/>

  <!-- Title -->
  <text class="title-text" x="200" y="35" text-anchor="middle">ELECTRICAL METER</text>

  <!-- Status Indicator -->
  <circle id="statusIndicator" class="status-ok" cx="370" cy="25" r="8"/>

  <!-- Power Display (Large) -->
  <g id="powerDisplay">
    <text class="label-text" x="200" y="65" text-anchor="middle">ACTIVE POWER</text>
    <text id="powerValue" class="value-text" x="200" y="95" text-anchor="middle" font-size="32">0.00</text>
    <text class="unit-text" x="200" y="115" text-anchor="middle">kW</text>
  </g>

  <!-- Power Gauge -->
  <g id="powerGauge" transform="translate(200, 180)">
    <circle class="gauge-bg" r="60" cx="0" cy="0"/>
    <circle id="powerGaugeFill" class="gauge-fill" r="60" cx="0" cy="0"
            stroke-dasharray="377" stroke-dashoffset="377"
            transform="rotate(-90)"/>
    <text id="powerPercent" class="value-text" x="0" y="5" text-anchor="middle" font-size="16">0%</text>
  </g>

  <!-- Voltage and Current -->
  <g id="voltageDisplay">
    <rect class="meter-bg" x="25" y="260" width="165" height="70" rx="5"/>
    <text class="label-text" x="107.5" y="280" text-anchor="middle">VOLTAGE</text>
    <text id="voltageValue" class="value-text" x="107.5" y="305" text-anchor="middle">0</text>
    <text class="unit-text" x="107.5" y="322" text-anchor="middle">V</text>
  </g>

  <g id="currentDisplay">
    <rect class="meter-bg" x="210" y="260" width="165" height="70" rx="5"/>
    <text class="label-text" x="292.5" y="280" text-anchor="middle">CURRENT</text>
    <text id="currentValue" class="value-text" x="292.5" y="305" text-anchor="middle">0.0</text>
    <text class="unit-text" x="292.5" y="322" text-anchor="middle">A</text>
  </g>

  <!-- Power Factor and Frequency -->
  <g id="pfDisplay">
    <rect class="meter-bg" x="25" y="345" width="165" height="70" rx="5"/>
    <text class="label-text" x="107.5" y="365" text-anchor="middle">POWER FACTOR</text>
    <text id="pfValue" class="value-text" x="107.5" y="390" text-anchor="middle">0.00</text>
    <circle id="pfIndicator" class="status-ok" cx="107.5" cy="405" r="5"/>
  </g>

  <g id="freqDisplay">
    <rect class="meter-bg" x="210" y="345" width="165" height="70" rx="5"/>
    <text class="label-text" x="292.5" y="365" text-anchor="middle">FREQUENCY</text>
    <text id="freqValue" class="value-text" x="292.5" y="390" text-anchor="middle">60.0</text>
    <text class="unit-text" x="292.5" y="407" text-anchor="middle">Hz</text>
  </g>

  <!-- Energy Counter -->
  <g id="energyDisplay">
    <rect class="meter-bg" x="25" y="430" width="350" height="50" rx="5"/>
    <text class="label-text" x="200" y="450" text-anchor="middle">ENERGY CONSUMPTION</text>
    <text id="energyValue" class="value-text" x="200" y="472" text-anchor="middle">0.00</text>
    <text class="unit-text" x="280" y="472">kWh</text>
  </g>

  <!-- Demand Indicator -->
  <g id="demandDisplay">
    <text class="label-text" x="30" y="145" text-anchor="start">DEMAND</text>
    <rect x="30" y="150" width="340" height="15" rx="3" fill="#333"/>
    <rect id="demandBar" class="demand-indicator" x="30" y="150" width="0" height="15" rx="3"/>
    <text id="demandValue" class="unit-text" x="375" y="162" text-anchor="end">0 kW</text>
  </g>

  <script><![CDATA[
//!export-start
let _pn_power = 0;           // Active power (kW)
let _pn_voltage = 0;         // Voltage (V)
let _pn_current = 0;         // Current (A)
let _pn_powerFactor = 1.0;   // Power factor (0-1)
let _pn_frequency = 60;      // Frequency (Hz)
let _pn_energy = 0;          // Energy consumption (kWh)
let _pn_demand = 0;          // Demand (kW)
let _pn_alarm = 0;           // Alarm status (0=normal, 1=alarm)
let _pn_maxPower = 500;      // Maximum power rating (kW)
//!export-end

function init() {
  update();
}

function update() {
  const powerValue = document.getElementById('powerValue');
  const voltageValue = document.getElementById('voltageValue');
  const currentValue = document.getElementById('currentValue');
  const pfValue = document.getElementById('pfValue');
  const freqValue = document.getElementById('freqValue');
  const energyValue = document.getElementById('energyValue');
  const demandValue = document.getElementById('demandValue');
  const powerPercent = document.getElementById('powerPercent');
  const powerGaugeFill = document.getElementById('powerGaugeFill');
  const pfIndicator = document.getElementById('pfIndicator');
  const statusIndicator = document.getElementById('statusIndicator');
  const demandBar = document.getElementById('demandBar');

  if (!powerValue || !voltageValue || !currentValue) return;

  // Update power display and gauge
  powerValue.textContent = _pn_power.toFixed(2);
  const percent = Math.min((_pn_power / _pn_maxPower) * 100, 100);
  powerPercent.textContent = Math.round(percent) + '%';

  const circumference = 2 * Math.PI * 60;
  const offset = circumference - (percent / 100) * circumference;
  powerGaugeFill.setAttribute('stroke-dashoffset', offset);

  // Change gauge color based on load
  if (percent > 90) {
    powerGaugeFill.setAttribute('stroke', '#ff0000');
  } else if (percent > 75) {
    powerGaugeFill.setAttribute('stroke', '#ffaa00');
  } else {
    powerGaugeFill.setAttribute('stroke', '#1976d2');
  }

  // Update voltage and current
  voltageValue.textContent = Math.round(_pn_voltage);
  currentValue.textContent = _pn_current.toFixed(1);

  // Update power factor
  pfValue.textContent = _pn_powerFactor.toFixed(2);
  if (_pn_powerFactor < 0.85) {
    pfIndicator.setAttribute('class', 'status-alarm');
  } else if (_pn_powerFactor < 0.95) {
    pfIndicator.setAttribute('class', 'status-warning');
  } else {
    pfIndicator.setAttribute('class', 'status-ok');
  }

  // Update frequency
  freqValue.textContent = _pn_frequency.toFixed(1);

  // Update energy (convert to MWh if >= 1000 kWh)
  const energyDisplay = document.querySelector('#energyDisplay .unit-text');
  if (_pn_energy >= 1000) {
    energyValue.textContent = (_pn_energy / 1000).toFixed(2);
    energyDisplay.textContent = 'MWh';
  } else {
    energyValue.textContent = _pn_energy.toFixed(2);
    energyDisplay.textContent = 'kWh';
  }

  // Update demand bar
  demandValue.textContent = Math.round(_pn_demand) + ' kW';
  const demandWidth = Math.min((_pn_demand / _pn_maxPower) * 340, 340);
  demandBar.setAttribute('width', demandWidth);

  // Update status indicator
  if (_pn_alarm === 1) {
    statusIndicator.setAttribute('class', 'status-alarm');
  } else {
    statusIndicator.setAttribute('class', 'status-ok');
  }
}

function putValue(id, value) {
  const numValue = Number(value) || 0;

  if (id === '_pn_power') {
    _pn_power = numValue;
  } else if (id === '_pn_voltage') {
    _pn_voltage = numValue;
  } else if (id === '_pn_current') {
    _pn_current = numValue;
  } else if (id === '_pn_powerFactor') {
    _pn_powerFactor = numValue;
  } else if (id === '_pn_frequency') {
    _pn_frequency = numValue;
  } else if (id === '_pn_energy') {
    _pn_energy = numValue;
  } else if (id === '_pn_demand') {
    _pn_demand = numValue;
  } else if (id === '_pn_alarm') {
    _pn_alarm = numValue;
  } else if (id === '_pn_maxPower') {
    _pn_maxPower = numValue;
  }

  update();
}

init();
]]></script>
</svg>
