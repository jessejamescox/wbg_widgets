<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 300" id="gauge-radial">
  <defs>
    <style>
      .radial-bg { fill: #1a1a1a; }
      .radial-outer { fill: none; stroke: #333; stroke-width: 25; }
      .radial-arc { fill: none; stroke-width: 25; stroke-linecap: round; }
      .radial-green { stroke: #4caf50; }
      .radial-yellow { stroke: #ffc107; }
      .radial-red { stroke: #f44336; }
      .radial-needle { fill: #ff9800; stroke: #fff; stroke-width: 2; }
      .radial-center { fill: #333; stroke: #fff; stroke-width: 3; }
      .radial-text { fill: #fff; font-family: Arial, sans-serif; }
      .radial-value { font-size: 32px; font-weight: bold; }
      .radial-label { font-size: 14px; }
      .radial-tick-major { stroke: #fff; stroke-width: 2; }
      .radial-tick-minor { stroke: #999; stroke-width: 1; }
    </style>
    <linearGradient id="needleGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#ff9800;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#ff5722;stop-opacity:1" />
    </linearGradient>
  </defs>

  <!-- Background -->
  <rect width="300" height="300" class="radial-bg"/>

  <!-- Outer ring background -->
  <circle cx="150" cy="150" r="110" class="radial-outer"/>

  <!-- Colored zones (270 degrees total, starting at 225deg) -->
  <path id="greenArc" class="radial-arc radial-green"
        d="M 61.7,211.7 A 110,110 0 0,1 116,49"/>
  <path id="yellowArc" class="radial-arc radial-yellow"
        d="M 116,49 A 110,110 0 0,1 184,49"/>
  <path id="redArc" class="radial-arc radial-red"
        d="M 184,49 A 110,110 0 0,1 238.3,211.7"/>

  <!-- Tick marks and labels -->
  <g id="tickMarks">
    <!-- Major ticks at 0, 25, 50, 75, 100 -->
    <line x1="61.7" y1="211.7" x2="52" y2="220" class="radial-tick-major"/>
    <line x1="80" y1="95" x2="72" y2="85" class="radial-tick-major"/>
    <line x1="150" y1="40" x2="150" y2="28" class="radial-tick-major"/>
    <line x1="220" y1="95" x2="228" y2="85" class="radial-tick-major"/>
    <line x1="238.3" y1="211.7" x2="248" y2="220" class="radial-tick-major"/>

    <!-- Minor ticks (10, 15, 35, 40, 60, 65, 85, 90) -->
    <line x1="68" y1="180" x2="62" y2="186" class="radial-tick-minor"/>
    <line x1="75" y1="150" x2="68" y2="153" class="radial-tick-minor"/>
    <line x1="100" y1="75" x2="94" y2="68" class="radial-tick-minor"/>
    <line x1="118" y1="60" x2="114" y2="52" class="radial-tick-minor"/>
    <line x1="182" y1="60" x2="186" y2="52" class="radial-tick-minor"/>
    <line x1="200" y1="75" x2="206" y2="68" class="radial-tick-minor"/>
    <line x1="225" y1="150" x2="232" y2="153" class="radial-tick-minor"/>
    <line x1="232" y1="180" x2="238" y2="186" class="radial-tick-minor"/>
  </g>

  <!-- Scale labels -->
  <text x="45" y="230" class="radial-text radial-label" text-anchor="middle">0</text>
  <text x="68" y="80" class="radial-text radial-label" text-anchor="middle">25</text>
  <text x="150" y="25" class="radial-text radial-label" text-anchor="middle">50</text>
  <text x="232" y="80" class="radial-text radial-label" text-anchor="middle">75</text>
  <text x="255" y="230" class="radial-text radial-label" text-anchor="middle">100</text>

  <!-- Needle -->
  <g id="needle" transform="rotate(-135 150 150)">
    <polygon points="150,150 155,55 150,45 145,55" class="radial-needle" fill="url(#needleGradient)"/>
  </g>

  <!-- Center hub -->
  <circle cx="150" cy="150" r="15" class="radial-center"/>

  <!-- Value display -->
  <text id="valueText" x="150" y="260" class="radial-text radial-value" text-anchor="middle">0.0</text>
  <text id="unitText" x="150" y="278" class="radial-text radial-label" text-anchor="middle">Units</text>

  <script type="text/javascript">
    <![CDATA[
    (function() {
      var svg = document.getElementById('gauge-radial');
      var needle = document.getElementById('needle');
      var valueText = document.getElementById('valueText');
      var unitText = document.getElementById('unitText');

      // Configuration
      var config = {
        min: 0,
        max: 100,
        value: 0,
        unit: 'Units',
  <script><![CDATA[
//!export-start
let _pn_value = 75;  // Current value
let _pn_min = 0;    // Minimum value  
let _pn_max = 100;  // Maximum value
let _ps_label = "Temperature"; // Label
let _ps_units = "Â°F"; // Units
//!export-end

function init() { update(); }

function update() {
  const arc = document.getElementById('gaugeArc');
  const valueText = document.getElementById('valueText');
  const labelText = document.getElementById('labelText');
  if (!arc) return;
  const percentage = ((_pn_value - _pn_min) / (_pn_max - _pn_min));
  const angle = percentage * 270;
  const radius = 50;
  const startAngle = -135 * Math.PI / 180;
  const endAngle = (startAngle + angle * Math.PI / 180);
  const x1 = 100 + radius * Math.cos(startAngle);
  const y1 = 100 + radius * Math.sin(startAngle);
  const x2 = 100 + radius * Math.cos(endAngle);
  const y2 = 100 + radius * Math.sin(endAngle);
  const largeArc = angle > 180 ? 1 : 0;
  arc.setAttribute('d', `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArc} 1 ${x2} ${y2}`);
  if (valueText) valueText.textContent = _pn_value.toFixed(1) + ' ' + _ps_units;
  if (labelText) labelText.textContent = _ps_label;
}

function putValue(id, value) {
  if (id === '_pn_value') _pn_value = Number(value) || 0;
  else if (id === '_pn_min') _pn_min = Number(value) || 0;
  else if (id === '_pn_max') _pn_max = Number(value) || 0;
  else if (id === '_ps_label') _ps_label = String(value);
  else if (id === '_ps_units') _ps_units = String(value);
  update();
}

init();
]]></script>
</svg>
