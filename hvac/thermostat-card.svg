<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 400" width="100%" height="100%">
  <defs>
    <style>
      .thermo-card-bg { fill: #2c3e50; stroke: #34495e; stroke-width: 2; }
      .thermo-display { fill: #1a252f; stroke: #34495e; stroke-width: 1; }
      .thermo-text { fill: #ecf0f1; font-family: Arial, sans-serif; }
      .thermo-label { fill: #95a5a6; font-family: Arial, sans-serif; font-size: 12px; }
      .thermo-temp-large { font-size: 48px; font-weight: bold; }
      .thermo-temp-small { font-size: 24px; }
      .thermo-mode-btn { cursor: pointer; stroke-width: 2; }
      .thermo-mode-btn:hover { opacity: 0.8; }
      .mode-off { fill: #7f8c8d; stroke: #95a5a6; }
      .mode-heat { fill: #e74c3c; stroke: #c0392b; }
      .mode-cool { fill: #3498db; stroke: #2980b9; }
      .mode-auto { fill: #f39c12; stroke: #d68910; }
      .mode-active { stroke-width: 3; filter: brightness(1.2); }
      .fan-icon { fill: #ecf0f1; }
      .fan-spinning { animation: spin 2s linear infinite; }
      @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
      }
    </style>
  </defs>

  <!-- Card Background -->
  <rect class="thermo-card-bg" x="10" y="10" width="280" height="380" rx="10"/>

  <!-- Title -->
  <text class="thermo-text" x="150" y="35" text-anchor="middle" font-size="18" font-weight="bold">
    Thermostat
  </text>

  <!-- Current Temperature Display -->
  <rect class="thermo-display" x="30" y="50" width="240" height="100" rx="5"/>
  <text class="thermo-label" x="150" y="70" text-anchor="middle">CURRENT TEMPERATURE</text>
  <text id="currentTemp" class="thermo-text thermo-temp-large" x="150" y="125" text-anchor="middle">72</text>
  <text class="thermo-text thermo-temp-small" x="205" y="110" text-anchor="start">°F</text>

  <!-- Setpoint Display -->
  <rect class="thermo-display" x="30" y="165" width="240" height="80" rx="5"/>
  <text class="thermo-label" x="150" y="185" text-anchor="middle">SETPOINT</text>
  <text id="setpoint" class="thermo-text thermo-temp-small" x="150" y="220" text-anchor="middle">70</text>
  <text class="thermo-text" x="180" y="215" text-anchor="start">°F</text>

  <!-- Setpoint Controls -->
  <g id="setpointUp" class="thermo-mode-btn" onclick="adjustSetpoint(1)">
    <circle cx="220" cy="207" r="15" fill="#34495e" stroke="#7f8c8d"/>
    <path d="M 220 200 L 227 214 L 213 214 Z" fill="#ecf0f1"/>
  </g>
  <g id="setpointDown" class="thermo-mode-btn" onclick="adjustSetpoint(-1)">
    <circle cx="80" cy="207" r="15" fill="#34495e" stroke="#7f8c8d"/>
    <path d="M 80 214 L 73 200 L 87 200 Z" fill="#ecf0f1"/>
  </g>

  <!-- Mode Selector -->
  <text class="thermo-label" x="150" y="270" text-anchor="middle">MODE</text>

  <g id="modeOff" class="thermo-mode-btn mode-off" onclick="setMode(0)">
    <rect x="30" y="280" width="50" height="40" rx="5"/>
    <text class="thermo-text" x="55" y="305" text-anchor="middle" font-size="14">OFF</text>
  </g>

  <g id="modeHeat" class="thermo-mode-btn mode-heat" onclick="setMode(1)">
    <rect x="95" y="280" width="50" height="40" rx="5"/>
    <text class="thermo-text" x="120" y="305" text-anchor="middle" font-size="14">HEAT</text>
  </g>

  <g id="modeCool" class="thermo-mode-btn mode-cool" onclick="setMode(2)">
    <rect x="160" y="280" width="50" height="40" rx="5"/>
    <text class="thermo-text" x="185" y="305" text-anchor="middle" font-size="14">COOL</text>
  </g>

  <g id="modeAuto" class="thermo-mode-btn mode-auto" onclick="setMode(3)">
    <rect x="225" y="280" width="50" height="40" rx="5"/>
    <text class="thermo-text" x="250" y="305" text-anchor="middle" font-size="14">AUTO</text>
  </g>

  <!-- Fan Control -->
  <text class="thermo-label" x="150" y="345" text-anchor="middle">FAN</text>

  <g id="fanAuto" class="thermo-mode-btn" onclick="setFan(0)">
    <rect x="70" y="355" width="70" height="30" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="thermo-text" x="105" y="375" text-anchor="middle" font-size="12">AUTO</text>
  </g>

  <g id="fanOn" class="thermo-mode-btn" onclick="setFan(1)">
    <rect x="160" y="355" width="70" height="30" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="thermo-text" x="195" y="375" text-anchor="middle" font-size="12">ON</text>
  </g>

  <!-- Fan Status Icon -->
  <g id="fanIcon" transform="translate(30, 360)">
    <circle class="fan-icon" cx="12" cy="10" r="3"/>
    <path class="fan-icon" d="M 12 7 Q 12 3 8 3 Q 8 6 12 10 Z"/>
    <path class="fan-icon" d="M 15 10 Q 19 10 19 6 Q 16 6 12 10 Z"/>
    <path class="fan-icon" d="M 12 13 Q 12 17 16 17 Q 16 14 12 10 Z"/>
    <path class="fan-icon" d="M 9 10 Q 5 10 5 14 Q 8 14 12 10 Z"/>
  </g>

  <script><![CDATA[
//!export-start
let _pn_currentTemp = 72;
let _pn_setpoint = 70;
let _pn_mode = 0;
let _pn_fanMode = 0;
let _pb_heating = false;
let _pb_cooling = false;
let _pb_fanRunning = false;
//!export-end

function init() {
  update();
}

// Exported variables for FUXA

    function updateDisplay() {
      document.getElementById('currentTemp').textContent = _pn_currentTemp.toFixed(1);
      document.getElementById('setpoint').textContent = _pn_setpoint.toFixed(1);

      // Update mode buttons
      document.getElementById('modeOff').classList.remove('mode-active');
      document.getElementById('modeHeat').classList.remove('mode-active');
      document.getElementById('modeCool').classList.remove('mode-active');
      document.getElementById('modeAuto').classList.remove('mode-active');

      if (_pn_mode === 0) document.getElementById('modeOff').classList.add('mode-active');
      else if (_pn_mode === 1) document.getElementById('modeHeat').classList.add('mode-active');
      else if (_pn_mode === 2) document.getElementById('modeCool').classList.add('mode-active');
      else if (_pn_mode === 3) document.getElementById('modeAuto').classList.add('mode-active');

      // Update fan buttons
      document.getElementById('fanAuto').querySelector('rect').style.stroke = _pn_fanMode === 0 ? '#3498db' : '#7f8c8d';
      document.getElementById('fanAuto').querySelector('rect').style.strokeWidth = _pn_fanMode === 0 ? '3' : '2';
      document.getElementById('fanOn').querySelector('rect').style.stroke = _pn_fanMode === 1 ? '#3498db' : '#7f8c8d';
      document.getElementById('fanOn').querySelector('rect').style.strokeWidth = _pn_fanMode === 1 ? '3' : '2';

      // Fan animation
const fanIcon = document.getElementById('fanIcon');
      if (_pb_fanRunning) {
        fanIcon.classList.add('fan-spinning');
      } else {
        fanIcon.classList.remove('fan-spinning');
      }

      // Determine _pb_heating/_pb_cooling status
      if (_pn_mode === 1) { // Heat _pn_mode
        _pb_heating = _pn_currentTemp < _pn_setpoint - 0.5;
        _pb_cooling = false;
      } else if (_pn_mode === 2) { // Cool _pn_mode
        _pb_heating = false;
        _pb_cooling = _pn_currentTemp > _pn_setpoint + 0.5;
      } else if (_pn_mode === 3) { // Auto _pn_mode
        _pb_heating = _pn_currentTemp < _pn_setpoint - 0.5;
        _pb_cooling = _pn_currentTemp > _pn_setpoint + 0.5;
      } else {
        _pb_heating = false;
        _pb_cooling = false;
      }

      _pb_fanRunning = _pn_fanMode === 1 || _pb_heating || _pb_cooling;
    }

    function adjustSetpoint(delta) {
      _pn_setpoint += delta;
      _pn_setpoint = Math.max(50, Math.min(90, _pn_setpoint));
      updateDisplay();
    }

    function setMode(newMode) {
      _pn_mode = newMode;
      updateDisplay();
    }

    function setFan(newFanMode) {
      _pn_fanMode = newFanMode;
      updateDisplay();
    }

    // Initialize display
    updateDisplay();

    // Update display every 100ms
    setInterval(updateDisplay, 100);

function putValue(id, value) {
  if (id === '_pn_currentTemp') {
    _pn_currentTemp = Number(value) || 0;
    update();
  } else if (id === '_pn_setpoint') {
    _pn_setpoint = Number(value) || 0;
    update();
  } else if (id === '_pn_mode') {
    _pn_mode = Number(value) || 0;
    update();
  } else if (id === '_pn_fanMode') {
    _pn_fanMode = Number(value) || 0;
    update();
  } else if (id === '_pb_heating') {
    _pb_heating = !!value;
    update();
  } else if (id === '_pb_cooling') {
    _pb_cooling = !!value;
    update();
  } else if (id === '_pb_fanRunning') {
    _pb_fanRunning = !!value;
    update();
  }
}

init();

]]></script>
</svg>
