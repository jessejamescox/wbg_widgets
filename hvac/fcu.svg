<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 400 350" width="100%" height="100%">
  <defs>
    <style>
      .fcu-box { fill: #34495e; stroke: #2c3e50; stroke-width: 2; }
      .fcu-duct { fill: #95a5a6; stroke: #7f8c8d; stroke-width: 2; }
      .fcu-fan { fill: none; stroke: #3498db; stroke-width: 2; }
      .fcu-fan-blade { fill: #3498db; }
      .fcu-fan-active { animation: spin 1s linear infinite; }
      .fcu-coil { stroke: #3498db; fill: none; stroke-width: 2; }
      .fcu-coil-active { filter: drop-shadow(0 0 3px #3498db); }
      .fcu-text { fill: #ecf0f1; font-family: Arial, sans-serif; font-size: 14px; }
      .fcu-label { fill: #bdc3c7; font-family: Arial, sans-serif; font-size: 11px; }
      .fcu-value { fill: #3498db; font-family: Arial, monospace; font-size: 12px; font-weight: bold; }
      .fcu-btn { cursor: pointer; stroke-width: 2; }
      .fcu-btn:hover { opacity: 0.8; }
      .fcu-btn-active { stroke: #3498db; stroke-width: 3; }
      .status-ok { fill: #27ae60; }
      .status-alarm { fill: #e74c3c; }
      @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
      }
    </style>
  </defs>

  <!-- Title -->
  <text class="fcu-text" x="200" y="25" text-anchor="middle" font-size="16" font-weight="bold">
    Fan Coil Unit
  </text>

  <!-- FCU Body -->
  <rect class="fcu-box" x="80" y="60" width="240" height="120" rx="5"/>

  <!-- Fan Section -->
  <rect class="fcu-box" x="90" y="70" width="70" height="100" rx="3"/>
  <g id="fan" transform="translate(125, 120)">
    <circle class="fcu-fan" cx="0" cy="0" r="30"/>
    <g class="fcu-fan-blade">
      <path d="M 0 -22 L 7 -7 L -7 -7 Z"/>
      <path d="M 22 0 L 7 7 L 7 -7 Z"/>
      <path d="M 0 22 L -7 7 L 7 7 Z"/>
      <path d="M -22 0 L -7 -7 L -7 7 Z"/>
    </g>
  </g>
  <text class="fcu-label" x="125" y="185" text-anchor="middle">FAN</text>

  <!-- Coil Section -->
  <rect class="fcu-box" x="170" y="70" width="70" height="100" rx="3"/>
  <g id="coil">
    <path class="fcu-coil" d="M 180 85 L 230 85 M 180 95 L 230 95 M 180 105 L 230 105 M 180 115 L 230 115 M 180 125 L 230 125 M 180 135 L 230 135 M 180 145 L 230 145 M 180 155 L 230 155"/>
    <circle cx="180" cy="85" r="2" fill="#3498db"/>
    <circle cx="180" cy="95" r="2" fill="#3498db"/>
    <circle cx="180" cy="105" r="2" fill="#3498db"/>
    <circle cx="180" cy="115" r="2" fill="#3498db"/>
    <circle cx="180" cy="125" r="2" fill="#3498db"/>
    <circle cx="180" cy="135" r="2" fill="#3498db"/>
    <circle cx="180" cy="145" r="2" fill="#3498db"/>
    <circle cx="180" cy="155" r="2" fill="#3498db"/>
  </g>
  <text class="fcu-label" x="205" y="185" text-anchor="middle">COIL</text>

  <!-- Filter Section -->
  <rect class="fcu-box" x="250" y="70" width="60" height="100" rx="3"/>
  <g id="filter">
    <rect fill="#bdc3c7" stroke="#7f8c8d" stroke-width="1" x="260" y="80" width="40" height="80"/>
    <line x1="265" y1="80" x2="265" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="270" y1="80" x2="270" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="275" y1="80" x2="275" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="280" y1="80" x2="280" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="285" y1="80" x2="285" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="290" y1="80" x2="290" y2="160" stroke="#95a5a6" stroke-width="1"/>
    <line x1="295" y1="80" x2="295" y2="160" stroke="#95a5a6" stroke-width="1"/>
  </g>
  <text class="fcu-label" x="280" y="185" text-anchor="middle">FILTER</text>

  <!-- Air In/Out -->
  <text class="fcu-label" x="40" y="125" text-anchor="middle">AIR IN</text>
  <path stroke="#3498db" stroke-width="2" fill="none" d="M 50 120 L 70 120 M 65 115 L 70 120 L 65 125"/>

  <text class="fcu-label" x="360" y="125" text-anchor="middle">AIR OUT</text>
  <path stroke="#3498db" stroke-width="2" fill="none" d="M 330 120 L 350 120 M 345 115 L 350 120 L 345 125"/>

  <!-- Fan Speed Control -->
  <text class="fcu-label" x="200" y="210" text-anchor="middle">FAN SPEED</text>

  <g id="speedOff" class="fcu-btn" onclick="setFanSpeed(0)">
    <rect x="30" y="220" width="60" height="35" rx="5" fill="#7f8c8d" stroke="#95a5a6"/>
    <text class="fcu-text" x="60" y="243" text-anchor="middle" font-size="12">OFF</text>
  </g>

  <g id="speedLow" class="fcu-btn" onclick="setFanSpeed(1)">
    <rect x="100" y="220" width="60" height="35" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="fcu-text" x="130" y="243" text-anchor="middle" font-size="12">LOW</text>
  </g>

  <g id="speedMed" class="fcu-btn" onclick="setFanSpeed(2)">
    <rect x="170" y="220" width="60" height="35" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="fcu-text" x="200" y="243" text-anchor="middle" font-size="12">MED</text>
  </g>

  <g id="speedHigh" class="fcu-btn" onclick="setFanSpeed(3)">
    <rect x="240" y="220" width="60" height="35" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="fcu-text" x="270" y="243" text-anchor="middle" font-size="12">HIGH</text>
  </g>

  <g id="speedAuto" class="fcu-btn" onclick="setFanSpeed(4)">
    <rect x="310" y="220" width="60" height="35" rx="5" fill="#34495e" stroke="#7f8c8d"/>
    <text class="fcu-text" x="340" y="243" text-anchor="middle" font-size="12">AUTO</text>
  </g>

  <!-- Data Panel -->
  <rect fill="#2c3e50" stroke="#34495e" stroke-width="1" x="20" y="270" width="360" height="65" rx="5"/>

  <text class="fcu-label" x="40" y="290">Room Temp:</text>
  <text id="roomTemp" class="fcu-value" x="40" y="308">72.5째F</text>

  <text class="fcu-label" x="140" y="290">Setpoint:</text>
  <text id="setpoint" class="fcu-value" x="140" y="308">72.0째F</text>

  <text class="fcu-label" x="230" y="290">Valve Position:</text>
  <text id="valvePos" class="fcu-value" x="230" y="308">45%</text>

  <text class="fcu-label" x="40" y="322">Status:</text>
  <g id="statusIndicator">
    <circle id="statusLight" class="status-ok" cx="80" cy="324" r="5"/>
    <text id="statusText" class="fcu-value" x="90" y="330">Normal</text>
  </g>

  <text class="fcu-label" x="230" y="322">Fan Speed:</text>
  <text id="fanSpeedText" class="fcu-value" x="230" y="330">Off</text>

  <script><![CDATA[
//!export-start
let _pn_fanSpeed = 0;
let _pn_roomTemp = 72.5;
let _pn_setpoint = 72.0;
let _pn_valvePosition = 45;
let _pb_enabled = true;
let _pb_alarmActive = false;
//!export-end

function init() {
  update();
}

// Exported variables for FUXA

    function updateDisplay() {
      // Update temperatures
      document.getElementById('roomTemp').textContent = _pn_roomTemp.toFixed(1) + '째F';
      document.getElementById('setpoint').textContent = _pn_setpoint.toFixed(1) + '째F';

      // Update valve position
      document.getElementById('valvePos').textContent = _pn_valvePosition.toFixed(0) + '%';

      // Update fan speed buttons
      document.getElementById('speedOff').querySelector('rect').classList.remove('fcu-btn-active');
      document.getElementById('speedLow').querySelector('rect').classList.remove('fcu-btn-active');
      document.getElementById('speedMed').querySelector('rect').classList.remove('fcu-btn-active');
      document.getElementById('speedHigh').querySelector('rect').classList.remove('fcu-btn-active');
      document.getElementById('speedAuto').querySelector('rect').classList.remove('fcu-btn-active');
let fanSpeedNames = ['Off', 'Low', 'Med', 'High', 'Auto'];
      document.getElementById('fanSpeedText').textContent = fanSpeedNames[_pn_fanSpeed];

      if (_pn_fanSpeed === 0) document.getElementById('speedOff').querySelector('rect').classList.add('fcu-btn-active');
      else if (_pn_fanSpeed === 1) document.getElementById('speedLow').querySelector('rect').classList.add('fcu-btn-active');
      else if (_pn_fanSpeed === 2) document.getElementById('speedMed').querySelector('rect').classList.add('fcu-btn-active');
      else if (_pn_fanSpeed === 3) document.getElementById('speedHigh').querySelector('rect').classList.add('fcu-btn-active');
      else if (_pn_fanSpeed === 4) document.getElementById('speedAuto').querySelector('rect').classList.add('fcu-btn-active');

      // Fan animation
const fanBlade = document.getElementById('fan').querySelector('.fcu-fan-blade');
      if (_pn_fanSpeed > 0) {
        fanBlade.classList.add('fcu-fan-active');
let animSpeed = 2.0 / _pn_fanSpeed; // Faster for higher speeds
        fanBlade.style.animationDuration = animSpeed + 's';
      } else {
        fanBlade.classList.remove('fcu-fan-active');
      }

      // Coil animation
const coil = document.getElementById('coil');
      if (_pn_valvePosition > 5) {
        coil.classList.add('fcu-coil-active');
      } else {
        coil.classList.remove('fcu-coil-active');
      }

      // Auto mode logic
      if (_pn_fanSpeed === 4) { // Auto mode
let tempError = Math.abs(_pn_roomTemp - _pn_setpoint);
        if (tempError < 0.5) {
          // Close to _pn_setpoint, low speed
          _pn_valvePosition = 25;
        } else if (tempError < 2) {
          // Moderate error, medium speed
          _pn_valvePosition = 50;
        } else {
          // Large error, high speed
          _pn_valvePosition = 75;
        }
      }

      // Update status
const statusLight = document.getElementById('statusLight');
const statusText = document.getElementById('statusText');

      if (!_pb_enabled) {
        statusLight.setAttribute('class', 'status-alarm');
        statusText.textContent = 'Disabled';
        statusText.style.fill = '#e74c3c';
      } else if (_pb_alarmActive) {
        statusLight.setAttribute('class', 'status-alarm');
        statusText.textContent = 'Alarm';
        statusText.style.fill = '#e74c3c';
      } else {
        statusLight.setAttribute('class', 'status-ok');
        statusText.textContent = 'Normal';
        statusText.style.fill = '#27ae60';
      }
    }

    function setFanSpeed(speed) {
      _pn_fanSpeed = speed;
      updateDisplay();
    }

    // Initialize display
    updateDisplay();

    // Update display every 100ms
    setInterval(updateDisplay, 100);

function putValue(id, value) {
  if (id === '_pn_fanSpeed') {
    _pn_fanSpeed = Number(value) || 0;
    update();
  } else if (id === '_pn_roomTemp') {
    _pn_roomTemp = Number(value) || 0;
    update();
  } else if (id === '_pn_setpoint') {
    _pn_setpoint = Number(value) || 0;
    update();
  } else if (id === '_pn_valvePosition') {
    _pn_valvePosition = Number(value) || 0;
    update();
  } else if (id === '_pb_enabled') {
    _pb_enabled = !!value;
    update();
  } else if (id === '_pb_alarmActive') {
    _pb_alarmActive = !!value;
    update();
  }
}

init();

]]></script>
</svg>
