<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 40" width="100%" height="100%">
  <defs>
    <style>
      .chip-body { fill: #ecf0f1; stroke: #95a5a6; stroke-width: 1.5; }
      .chip-alarm { fill: #e74c3c; stroke: #c0392b; stroke-width: 1.5; }
      .icon { fill: #e74c3c; }
      .icon-normal { fill: #95a5a6; }
      .alarm-text { font-family: Arial, sans-serif; font-size: 11px; fill: #ffffff; font-weight: bold; text-anchor: middle; }
      .normal-text { font-family: Arial, sans-serif; font-size: 11px; fill: #27ae60; font-weight: bold; text-anchor: middle; }
      .label-text { font-family: Arial, sans-serif; font-size: 8px; fill: #95a5a6; text-anchor: middle; }
    </style>
  </defs>

  <!-- Chip Body -->
  <rect id="chipBody" x="2" y="2" width="76" height="36" class="chip-body" rx="4"/>

  <!-- Bell Icon -->
  <g id="bellIcon">
    <path d="M 15 18 Q 15 13, 18 11 Q 21 13, 21 18 L 21 23 L 23 25 L 13 25 L 15 23 Z" class="icon-normal"/>
    <path d="M 16 26 Q 16 27, 18 27 Q 20 27, 20 26" stroke="#95a5a6" fill="none" stroke-width="1"/>
  </g>

  <!-- Status Text -->
  <text id="statusText" x="50" y="22" class="normal-text">NORMAL</text>

  <!-- Label -->
  <text id="labelText" x="40" y="34" class="label-text">ALARM STATUS</text>

  <script><![CDATA[
//!export-start
let _pn_alarmActive = 0;    // Alarm active state: 0=normal, 1=alarm
let _pn_alarmCount = 0;     // Number of active alarms (0-99)
let _pn_acknowledged = 0;   // Acknowledgement status: 0=unack, 1=ack
let _pb_blinkState = false; // Blink state for unacknowledged alarms
//!export-end

function init() {
  update();
}

let blinkInterval = null;

    function update() {
const chipBody = document.getElementById('chipBody');
const bellIcon = document.getElementById('bellIcon');
const statusText = document.getElementById('statusText');

  if (!chipBody || !bellIcon || !statusText) return;
let bell = bellIcon.querySelector('path');

      if (_pn_alarmActive === 1) {
        // Alarm state
        chipBody.setAttribute('class', 'chip-alarm');
        bell.setAttribute('class', 'icon');
        statusText.setAttribute('class', 'alarm-text');

        if (_pn_alarmCount > 0) {
          statusText.textContent = 'ALARM (' + _pn_alarmCount + ')';
        } else {
          statusText.textContent = 'ALARM';
        }

        // Blink if unacknowledged
        if (_pn_acknowledged === 0) {
          if (!blinkInterval) {
            blinkInterval = setInterval(function() {
              _pb_blinkState = !_pb_blinkState;
              chipBody.style.opacity = _pb_blinkState ? '0.5' : '1';
            }, 500);
          }
        } else {
          if (blinkInterval) {
            clearInterval(blinkInterval);
            blinkInterval = null;
          }
          chipBody.style.opacity = '1';
        }
      } else {
        // Normal state
        if (blinkInterval) {
          clearInterval(blinkInterval);
          blinkInterval = null;
        }
        chipBody.setAttribute('class', 'chip-body');
        chipBody.style.opacity = '1';
        bell.setAttribute('class', 'icon-normal');
        statusText.setAttribute('class', 'normal-text');
        statusText.textContent = 'NORMAL';
      }
    }

    // Allow click to acknowledge
    document.getElementById('chipBody').onclick = function() {
      if (_pn_alarmActive === 1) {
        _pn_acknowledged = 1;
        update();
      }
    };

function putValue(id, value) {
  if (id === '_pn_alarmActive') {
    _pn_alarmActive = Number(value) || 0;
    update();
  } else if (id === '_pn_alarmCount') {
    _pn_alarmCount = Number(value) || 0;
    update();
  } else if (id === '_pn_acknowledged') {
    _pn_acknowledged = Number(value) || 0;
    update();
  } else if (id === '_pb_blinkState') {
    _pb_blinkState = !!value;
    update();
  }
}

init();

]]></script>
</svg>
