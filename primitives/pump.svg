<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 80" width="100%" height="100%">
  <defs>
    <style>
      .pump-body { fill: #3498db; stroke: #2c3e50; stroke-width: 2; }
      .pump-volute { fill: #5dade2; stroke: #2c3e50; stroke-width: 2; }
      .motor { fill: #34495e; stroke: #2c3e50; stroke-width: 1.5; }
      .pipe { fill: none; stroke: #7f8c8d; stroke-width: 4; }
      .impeller { fill: #2980b9; transition: opacity 0.3s; }
      .status-on { fill: #27ae60; }
      .status-off { fill: #95a5a6; }
      .status-alarm { fill: #e74c3c; }
      .label-text { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; text-anchor: middle; font-weight: bold; }
    </style>
  </defs>

  <!-- Inlet Pipe -->
  <line x1="5" y1="40" x2="30" y2="40" class="pipe"/>

  <!-- Pump Volute (spiral casing) -->
  <ellipse cx="50" cy="40" rx="20" ry="18" class="pump-volute"/>

  <!-- Impeller (rotates when running) -->
  <g id="impeller" transform-origin="50 40">
    <path class="impeller" d="M 50 40 L 55 30 L 60 40 L 55 50 Z"/>
    <path class="impeller" d="M 50 40 L 40 35 L 50 30 L 60 35 Z"/>
    <path class="impeller" d="M 50 40 L 40 45 L 50 50 L 60 45 Z"/>
  </g>
  <circle cx="50" cy="40" r="6" fill="#2c3e50"/>

  <!-- Discharge Pipe -->
  <line x1="70" y1="40" x2="95" y2="40" class="pipe"/>

  <!-- Motor -->
  <rect x="45" y="55" width="10" height="15" class="motor" rx="1"/>
  <line x1="50" y1="55" x2="50" y2="48" stroke="#2c3e50" stroke-width="2"/>

  <!-- Status Indicator -->
  <circle id="statusIndicator" cx="50" cy="15" r="6" class="status-off"/>

  <!-- Status Text -->
  <text id="statusText" x="50" y="8" class="label-text">OFF</text>

  <script><![CDATA[
//!export-start
let _pn_status = 0;
let _pn_alarmState = 0;
let _pn_runCommand = 0;
let _pn_runFeedback = 0;
//!export-end

let rotation = 0;
let animationId = null;

function init() {
  update();
}

function update() {
  const impeller = document.getElementById('impeller');
  const indicator = document.getElementById('statusIndicator');
  const statusText = document.getElementById('statusText');

  if (!impeller || !indicator || !statusText) return;

  if (_pn_status === 1) {
    // Running
    if (!animationId) {
      animationId = setInterval(function() {
        rotation += 15;
        impeller.setAttribute('transform', 'rotate(' + rotation + ' 50 40)');
      }, 50);
    }
    indicator.setAttribute('class', 'status-on');
    statusText.textContent = 'RUN';
  } else {
    // Stopped
    if (animationId) {
      clearInterval(animationId);
      animationId = null;
    }
    indicator.setAttribute('class', 'status-off');
    statusText.textContent = 'OFF';
  }

  // Alarm state
  if (_pn_alarmState === 1) {
    indicator.setAttribute('class', 'status-alarm');
    statusText.textContent = 'ALARM';
  }
}

function putValue(id, value) {
  if (id === '_pn_status') {
    _pn_status = Number(value) || 0;
    update();
  } else if (id === '_pn_alarmState') {
    _pn_alarmState = Number(value) || 0;
    update();
  } else if (id === '_pn_runCommand') {
    _pn_runCommand = Number(value) || 0;
    update();
  } else if (id === '_pn_runFeedback') {
    _pn_runFeedback = Number(value) || 0;
    update();
  }
}
init();

]]></script>
</svg>
