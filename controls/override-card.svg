<?xml version="1.0" encoding="UTF-8"?>
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <style>
      .card-bg {
        fill: white;
        stroke: #ccc;
        stroke-width: 2;
      }
      .header-bg {
        fill: #FF9800;
      }
      .header-text {
        fill: white;
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
      }
      .section-label {
        fill: #666;
        font-family: Arial, sans-serif;
        font-size: 10px;
        text-transform: uppercase;
      }
      .value-text {
        fill: #333;
        font-family: Arial, sans-serif;
        font-size: 13px;
      }
      .time-text {
        fill: #FF9800;
        font-family: 'Courier New', monospace;
        font-size: 24px;
        font-weight: bold;
      }
      .reason-text {
        fill: #555;
        font-family: Arial, sans-serif;
        font-size: 12px;
        font-style: italic;
      }
      .btn {
        cursor: pointer;
        transition: all 0.2s;
      }
      .btn-rect {
        fill: #4CAF50;
        stroke: #388E3C;
        stroke-width: 2;
        transition: all 0.2s;
      }
      .btn:hover .btn-rect {
        filter: brightness(1.1);
      }
      .btn:active .btn-rect {
        filter: brightness(0.9);
      }
      .btn-text {
        fill: white;
        font-family: Arial, sans-serif;
        font-size: 12px;
        font-weight: bold;
        text-anchor: middle;
        pointer-events: none;
      }
      .divider {
        stroke: #e0e0e0;
        stroke-width: 1;
      }
      .status-inactive {
        opacity: 0.5;
      }
      .warning-icon {
        fill: #FF9800;
      }
      @keyframes countdown {
        0% { opacity: 1; }
        50% { opacity: 0.6; }
        100% { opacity: 1; }
      }
      .time-text.active {
        animation: countdown 2s infinite;
      }
    </style>
  </defs>

  <!-- Card Background -->
  <rect class="card-bg" x="0" y="0" width="280" height="220" rx="5"/>

  <!-- Header -->
  <rect class="header-bg" x="0" y="0" width="280" height="30" rx="5"/>
  <text class="header-text" x="10" y="20">SCHEDULE OVERRIDE</text>

  <!-- Warning Icon -->
  <circle class="warning-icon" id="warningIcon" cx="245" cy="15" r="10"/>
  <text x="245" y="21" text-anchor="middle" fill="white" font-size="16px" font-weight="bold">!</text>

  <!-- Status Section -->
  <text class="section-label" x="15" y="50">STATUS</text>
  <text class="value-text" id="statusText" x="15" y="68">Override Active</text>

  <!-- Divider -->
  <line class="divider" x1="15" y1="80" x2="265" y2="80"/>

  <!-- Time Remaining Section -->
  <text class="section-label" x="15" y="100">TIME REMAINING</text>
  <text class="time-text" id="timeRemaining" x="15" y="130">02:45</text>
  <text class="value-text" x="110" y="125">hours:minutes</text>

  <!-- Divider -->
  <line class="divider" x1="15" y1="145" x2="265" y2="145"/>

  <!-- Reason Section -->
  <text class="section-label" x="15" y="165">REASON</text>
  <text class="reason-text" id="reasonText" x="15" y="183">"Maintenance work in progress"</text>

  <!-- Restore Button -->
  <g class="btn" id="restoreBtn">
    <rect class="btn-rect" x="70" y="195" width="140" height="18" rx="4"/>
    <text class="btn-text" x="140" y="208">RESTORE SCHEDULE</text>
  </g>

  <script><![CDATA[
//!export-start
let _pn_isActive = 1;                            // Override active: 0=inactive, 1=active
let _pn_remainingMinutes = 165;                  // Time remaining (minutes)
let _ps_reason = "Maintenance work in progress"; // Override reason
//!export-end

function init() {
  update();
}

function formatTime(minutes) {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  return String(hours).padStart(2, '0') + ':' + String(mins).padStart(2, '0');
}

function update() {
  const statusText = document.getElementById('statusText');
  const timeRemaining = document.getElementById('timeRemaining');
  const reasonText = document.getElementById('reasonText');
  const warningIcon = document.getElementById('warningIcon');
  const cardBg = document.querySelector('.card-bg');

  if (!statusText) return;

  if (_pn_isActive) {
    statusText.textContent = 'Override Active';
    timeRemaining.textContent = formatTime(_pn_remainingMinutes);
    timeRemaining.classList.add('active');
    warningIcon.style.opacity = '1';
    if (cardBg) cardBg.classList.remove('status-inactive');
  } else {
    statusText.textContent = 'Schedule Normal';
    timeRemaining.textContent = '--:--';
    timeRemaining.classList.remove('active');
    warningIcon.style.opacity = '0.3';
    if (cardBg) cardBg.classList.add('status-inactive');
  }

  reasonText.textContent = '"' + _ps_reason + '"';
}

function putValue(id, value) {
  if (id === '_pn_isActive') {
    _pn_isActive = Number(value) || 0;
  } else if (id === '_pn_remainingMinutes') {
    _pn_remainingMinutes = Number(value) || 0;
  } else if (id === '_ps_reason') {
    _ps_reason = String(value);
  }

  update();
}

init();
]]></script>
</svg>
