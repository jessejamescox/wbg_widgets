<?xml version="1.0" encoding="UTF-8"?>
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <style>
      .card-bg {
        fill: white;
        stroke: #ccc;
        stroke-width: 2;
      }
      .header-bg {
        fill: #2196F3;
      }
      .header-text {
        fill: white;
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
      }
      .label-text {
        fill: #666;
        font-family: Arial, sans-serif;
        font-size: 11px;
      }
      .value-text {
        fill: #333;
        font-family: 'Courier New', monospace;
        font-size: 18px;
        font-weight: bold;
      }
      .value-text.pv { fill: #2196F3; }
      .value-text.sp { fill: #FF9800; }
      .value-text.out { fill: #4CAF50; }
      .term-text {
        fill: #555;
        font-family: Arial, sans-serif;
        font-size: 10px;
      }
      .term-value {
        fill: #333;
        font-family: 'Courier New', monospace;
        font-size: 11px;
      }
      .mode-btn {
        cursor: pointer;
        transition: all 0.2s;
      }
      .mode-btn-rect {
        fill: #e0e0e0;
        stroke: #999;
        stroke-width: 1;
      }
      .mode-btn-rect.active {
        fill: #4CAF50;
        stroke: #388E3C;
      }
      .mode-btn-text {
        fill: #333;
        font-family: Arial, sans-serif;
        font-size: 10px;
        font-weight: bold;
        text-anchor: middle;
        pointer-events: none;
      }
      .mode-btn-text.active {
        fill: white;
      }
      .mode-btn:hover .mode-btn-rect {
        filter: brightness(1.1);
      }
      .divider {
        stroke: #ddd;
        stroke-width: 1;
      }
      .unit-text {
        fill: #999;
        font-family: Arial, sans-serif;
        font-size: 9px;
      }
    </style>
  </defs>

  <!-- Card Background -->
  <rect class="card-bg" x="0" y="0" width="320" height="200" rx="5"/>

  <!-- Header -->
  <rect class="header-bg" x="0" y="0" width="320" height="30" rx="5"/>
  <text class="header-text" x="10" y="20">PID CONTROLLER</text>

  <!-- Main Values Section -->
  <g id="mainValues">
    <!-- Process Variable (PV) -->
    <text class="label-text" x="15" y="50">PV</text>
    <text class="value-text pv" id="pvValue" x="15" y="72">75.5</text>
    <text class="unit-text" id="pvUnit" x="70" y="72">°F</text>

    <!-- Setpoint (SP) -->
    <text class="label-text" x="115" y="50">SP</text>
    <text class="value-text sp" id="spValue" x="115" y="72">72.0</text>
    <text class="unit-text" id="spUnit" x="170" y="72">°F</text>

    <!-- Output -->
    <text class="label-text" x="215" y="50">OUTPUT</text>
    <text class="value-text out" id="outValue" x="215" y="72">45.2</text>
    <text class="unit-text" x="270" y="72">%</text>
  </g>

  <!-- Divider -->
  <line class="divider" x1="10" y1="85" x2="310" y2="85"/>

  <!-- PID Terms Section -->
  <g id="pidTerms">
    <text class="label-text" x="15" y="105">PID TERMS</text>

    <!-- P Term -->
    <text class="term-text" x="15" y="120">P:</text>
    <text class="term-value" id="pValue" x="35" y="120">12.3</text>

    <!-- I Term -->
    <text class="term-text" x="85" y="120">I:</text>
    <text class="term-value" id="iValue" x="100" y="120">8.5</text>

    <!-- D Term -->
    <text class="term-text" x="150" y="120">D:</text>
    <text class="term-value" id="dValue" x="165" y="120">-2.1</text>

    <!-- Error -->
    <text class="term-text" x="215" y="120">ERR:</text>
    <text class="term-value" id="errValue" x="240" y="120">3.5</text>
  </g>

  <!-- Divider -->
  <line class="divider" x1="10" y1="135" x2="310" y2="135"/>

  <!-- Mode Control -->
  <text class="label-text" x="15" y="155">MODE</text>

  <!-- Auto Button -->
  <g class="mode-btn" id="autoBtn">
    <rect class="mode-btn-rect" id="autoBtnRect" x="15" y="165" width="60" height="25" rx="3"/>
    <text class="mode-btn-text" id="autoBtnText" x="45" y="182">AUTO</text>
  </g>

  <!-- Manual Button -->
  <g class="mode-btn" id="manualBtn">
    <rect class="mode-btn-rect" id="manualBtnRect" x="85" y="165" width="60" height="25" rx="3"/>
    <text class="mode-btn-text" id="manualBtnText" x="115" y="182">MANUAL</text>
  </g>

  <!-- Status Text -->
  <text class="term-text" id="statusText" x="160" y="182">Auto Mode Active</text>

  <script><![CDATA[
//!export-start
let _pn_pvValue = 75.5;      // Process variable (°F)
let _pn_spValue = 72.0;      // Setpoint (°F)
let _pn_outValue = 45.2;     // Output (%)
let _pn_pValue = 12.3;       // P term
let _pn_iValue = 8.5;        // I term
let _pn_dValue = -2.1;       // D term
let _pn_errValue = 3.5;      // Error
let _pn_mode = 1;            // Mode: 0=manual, 1=auto
let _ps_units = "°F";        // Units
//!export-end

function init() {
  update();
}

function update() {
  const pvValueElem = document.getElementById('pvValue');
  const spValueElem = document.getElementById('spValue');
  const outValueElem = document.getElementById('outValue');
  const pValueElem = document.getElementById('pValue');
  const iValueElem = document.getElementById('iValue');
  const dValueElem = document.getElementById('dValue');
  const errValueElem = document.getElementById('errValue');
  const autoBtnRect = document.getElementById('autoBtnRect');
  const autoBtnText = document.getElementById('autoBtnText');
  const manualBtnRect = document.getElementById('manualBtnRect');
  const manualBtnText = document.getElementById('manualBtnText');
  const statusTextElem = document.getElementById('statusText');
  const pvUnitElem = document.getElementById('pvUnit');
  const spUnitElem = document.getElementById('spUnit');

  if (!pvValueElem) return;

  // Update main values
  pvValueElem.textContent = _pn_pvValue.toFixed(1);
  spValueElem.textContent = _pn_spValue.toFixed(1);
  outValueElem.textContent = _pn_outValue.toFixed(1);
  if (pvUnitElem) pvUnitElem.textContent = _ps_units;
  if (spUnitElem) spUnitElem.textContent = _ps_units;

  // Update PID terms
  pValueElem.textContent = _pn_pValue.toFixed(1);
  iValueElem.textContent = _pn_iValue.toFixed(1);
  dValueElem.textContent = _pn_dValue.toFixed(1);
  errValueElem.textContent = _pn_errValue.toFixed(1);

  // Update mode buttons
  if (_pn_mode === 1) {
    autoBtnRect.classList.add('active');
    autoBtnText.classList.add('active');
    manualBtnRect.classList.remove('active');
    manualBtnText.classList.remove('active');
    statusTextElem.textContent = 'Auto Mode Active';
  } else {
    autoBtnRect.classList.remove('active');
    autoBtnText.classList.remove('active');
    manualBtnRect.classList.add('active');
    manualBtnText.classList.add('active');
    statusTextElem.textContent = 'Manual Mode Active';
  }
}

function putValue(id, value) {
  if (id === '_pn_pvValue') {
    _pn_pvValue = Number(value) || 0;
  } else if (id === '_pn_spValue') {
    _pn_spValue = Number(value) || 0;
  } else if (id === '_pn_outValue') {
    _pn_outValue = Number(value) || 0;
  } else if (id === '_pn_pValue') {
    _pn_pValue = Number(value) || 0;
  } else if (id === '_pn_iValue') {
    _pn_iValue = Number(value) || 0;
  } else if (id === '_pn_dValue') {
    _pn_dValue = Number(value) || 0;
  } else if (id === '_pn_errValue') {
    _pn_errValue = Number(value) || 0;
  } else if (id === '_pn_mode') {
    _pn_mode = Number(value) || 0;
  } else if (id === '_ps_units') {
    _ps_units = String(value);
  }

  update();
}

init();
]]></script>
</svg>
