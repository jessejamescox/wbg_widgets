<?xml version="1.0" encoding="UTF-8"?>
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <style>
      .card-bg {
        fill: white;
        stroke: #ccc;
        stroke-width: 2;
      }
      .header-bg {
        fill: #673AB7;
      }
      .header-text {
        fill: white;
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
      }
      .section-label {
        fill: #666;
        font-family: Arial, sans-serif;
        font-size: 10px;
        text-transform: uppercase;
      }
      .value-text {
        fill: #333;
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
      }
      .time-text {
        fill: #673AB7;
        font-family: 'Courier New', monospace;
        font-size: 16px;
        font-weight: bold;
      }
      .status-badge {
        transition: all 0.3s;
      }
      .status-badge-rect {
        fill: #4CAF50;
        stroke: none;
      }
      .status-badge-rect.override {
        fill: #FF9800;
      }
      .status-badge-text {
        fill: white;
        font-family: Arial, sans-serif;
        font-size: 10px;
        font-weight: bold;
        text-anchor: middle;
      }
      .divider {
        stroke: #e0e0e0;
        stroke-width: 1;
      }
      .icon-text {
        fill: #999;
        font-family: Arial, sans-serif;
        font-size: 18px;
      }
      .secondary-text {
        fill: #999;
        font-family: Arial, sans-serif;
        font-size: 11px;
      }
      @keyframes blink {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.3; }
      }
      .override-indicator {
        animation: blink 1.5s infinite;
      }
    </style>
  </defs>

  <!-- Card Background -->
  <rect class="card-bg" x="0" y="0" width="280" height="180" rx="5"/>

  <!-- Header -->
  <rect class="header-bg" x="0" y="0" width="280" height="30" rx="5"/>
  <text class="header-text" x="10" y="20">SCHEDULE</text>

  <!-- Status Badge -->
  <g class="status-badge" id="statusBadge">
    <rect class="status-badge-rect" id="statusBadgeRect" x="200" y="7" width="70" height="16" rx="8"/>
    <text class="status-badge-text" id="statusBadgeText" x="235" y="18">ACTIVE</text>
  </g>

  <!-- Current Period Section -->
  <text class="section-label" x="15" y="50">CURRENT PERIOD</text>
  <text class="icon-text" x="15" y="73">⏰</text>
  <text class="value-text" id="currentPeriod" x="45" y="73">Morning</text>

  <!-- Current Time -->
  <text class="time-text" id="currentTime" x="15" y="95">08:45</text>
  <text class="secondary-text" id="currentTemp" x="80" y="95">Heating to 72°F</text>

  <!-- Divider -->
  <line class="divider" x1="15" y1="105" x2="265" y2="105"/>

  <!-- Next Event Section -->
  <text class="section-label" x="15" y="122">NEXT EVENT</text>
  <text class="icon-text" x="15" y="143">▶</text>
  <text class="value-text" id="nextPeriod" x="45" y="143">Day</text>
  <text class="secondary-text" id="nextTime" x="45" y="158">at 09:00 - 68°F</text>

  <!-- Override Indicator -->
  <g id="overrideIndicator" style="opacity: 0;">
    <circle class="override-indicator" cx="250" cy="138" r="8" fill="#FF9800"/>
    <text x="250" y="143" text-anchor="middle" fill="white" font-size="12px" font-weight="bold">!</text>
  </g>


  <script><![CDATA[
//!export-start
let _ps_currentPeriod = "Morning";    // Current period name
let _ps_currentTime = "08:45";        // Current time (HH:MM)
let _pn_currentTemp = 72.0;           // Current temperature setpoint (°F)
let _ps_nextPeriod = "Day";           // Next period name
let _ps_nextTime = "09:00";           // Next event time (HH:MM)
let _pn_nextTemp = 68.0;              // Next temperature setpoint (°F)
let _pn_isOverride = 0;               // Override active: 0=no, 1=yes
let _ps_units = "°F";                 // Temperature units
//!export-end

function init() {
  update();
}

function update() {
  const currentPeriodElem = document.getElementById('currentPeriod');
  const currentTimeElem = document.getElementById('currentTime');
  const currentTempElem = document.getElementById('currentTemp');
  const nextPeriodElem = document.getElementById('nextPeriod');
  const nextTimeElem = document.getElementById('nextTime');
  const statusBadgeRect = document.getElementById('statusBadgeRect');
  const statusBadgeText = document.getElementById('statusBadgeText');
  const overrideIndicator = document.getElementById('overrideIndicator');

  if (!currentPeriodElem) return;

  // Update current period
  currentPeriodElem.textContent = _ps_currentPeriod;
  currentTimeElem.textContent = _ps_currentTime;
  currentTempElem.textContent = 'Heating to ' + _pn_currentTemp.toFixed(0) + _ps_units;

  // Update next event
  nextPeriodElem.textContent = _ps_nextPeriod;
  nextTimeElem.textContent = 'at ' + _ps_nextTime + ' - ' + _pn_nextTemp.toFixed(0) + _ps_units;

  // Update status badge
  if (_pn_isOverride) {
    statusBadgeRect.classList.add('override');
    statusBadgeText.textContent = 'OVERRIDE';
    if (overrideIndicator) overrideIndicator.style.opacity = '1';
  } else {
    statusBadgeRect.classList.remove('override');
    statusBadgeText.textContent = 'ACTIVE';
    if (overrideIndicator) overrideIndicator.style.opacity = '0';
  }
}

function putValue(id, value) {
  if (id === '_ps_currentPeriod') {
    _ps_currentPeriod = String(value);
  } else if (id === '_ps_currentTime') {
    _ps_currentTime = String(value);
  } else if (id === '_pn_currentTemp') {
    _pn_currentTemp = Number(value) || 0;
  } else if (id === '_ps_nextPeriod') {
    _ps_nextPeriod = String(value);
  } else if (id === '_ps_nextTime') {
    _ps_nextTime = String(value);
  } else if (id === '_pn_nextTemp') {
    _pn_nextTemp = Number(value) || 0;
  } else if (id === '_pn_isOverride') {
    _pn_isOverride = Number(value) || 0;
  } else if (id === '_ps_units') {
    _ps_units = String(value);
  }

  update();
}

init();
]]></script>
</svg>
