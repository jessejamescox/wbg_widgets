<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 400" id="fuel-tank-widget">
  <defs>
    <linearGradient id="fuelGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#ffd54f;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#f57f17;stop-opacity:0.9" />
    </linearGradient>
    <linearGradient id="tankBodyGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#424242;stop-opacity:0.8" />
      <stop offset="50%" style="stop-color:#616161;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#424242;stop-opacity:0.8" />
    </linearGradient>
    <filter id="glow">
      <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    <pattern id="leakPattern" patternUnits="userSpaceOnUse" width="4" height="4">
      <circle cx="2" cy="2" r="1" fill="#ff5252" opacity="0.6"/>
    </pattern>
  </defs>

  <!-- Background -->
  <rect width="300" height="400" fill="#f5f5f5"/>

  <!-- Title -->
  <text x="150" y="25" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#333">
    Fuel Storage Tank
  </text>

  <!-- Tank Container -->
  <g id="tank-container">
    <!-- Tank body (cylindrical) -->
    <ellipse cx="150" cy="70" rx="70" ry="15" fill="#757575" stroke="#333" stroke-width="2"/>
    <rect x="80" y="70" width="140" height="200" fill="url(#tankBodyGradient)" stroke="#333" stroke-width="2"/>
    <ellipse cx="150" cy="270" rx="70" ry="15" fill="#424242" stroke="#333" stroke-width="2"/>

    <!-- Fuel fill (animated) -->
    <g id="fuel-fill">
      <rect id="fuel-level" x="82" y="170" width="136" height="98" fill="url(#fuelGradient)" opacity="0.85"/>
      <ellipse id="fuel-surface" cx="150" cy="170" rx="68" ry="13" fill="#ffd54f" opacity="0.7"/>
    </g>

    <!-- Level gauge (vertical) -->
    <g id="level-gauge">
      <rect x="235" y="70" width="30" height="200" fill="#ffffff" stroke="#333" stroke-width="2" rx="5"/>
      <rect id="gauge-fill" x="237" y="170" width="26" height="98" fill="#4caf50" rx="3"/>

      <!-- Gauge markings -->
      <line x1="235" y1="95" x2="240" y2="95" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="120" x2="240" y2="120" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="145" x2="240" y2="145" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="170" x2="240" y2="170" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="195" x2="240" y2="195" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="220" x2="240" y2="220" stroke="#333" stroke-width="1"/>
      <line x1="235" y1="245" x2="240" y2="245" stroke="#333" stroke-width="1"/>
    </g>

    <!-- Temperature indicator -->
    <g id="temp-indicator">
      <rect x="30" y="70" width="35" height="120" fill="#ffffff" stroke="#333" stroke-width="2" rx="5"/>
      <rect id="temp-fill" x="35" y="150" width="25" height="35" fill="#ff9800" rx="3"/>
      <circle cx="47.5" cy="195" r="10" fill="#ff9800" stroke="#333" stroke-width="2"/>
      <text x="47.5" y="220" font-family="Arial" font-size="10" text-anchor="middle" fill="#333">TEMP</text>
    </g>
  </g>

  <!-- Leak Detection Indicator -->
  <g id="leak-indicator">
    <circle cx="30" cy="280" r="10" fill="#4caf50" id="leak-light"/>
    <text x="45" y="285" font-family="Arial" font-size="11" fill="#333">Leak Detect</text>
    <!-- Leak droplets (hidden by default) -->
    <g id="leak-droplets" opacity="0">
      <ellipse cx="140" cy="275" rx="3" ry="5" fill="#1976d2" opacity="0.7"/>
      <ellipse cx="160" cy="278" rx="2" ry="4" fill="#1976d2" opacity="0.7"/>
      <ellipse cx="150" cy="280" rx="2.5" ry="4.5" fill="#1976d2" opacity="0.7"/>
    </g>
  </g>

  <!-- Info Panel -->
  <g id="info-panel">
    <rect x="20" y="300" width="260" height="85" fill="#ffffff" stroke="#333" stroke-width="2" rx="5"/>

    <!-- Level Percentage -->
    <text x="150" y="320" font-family="Arial" font-size="14" font-weight="bold" text-anchor="middle" fill="#333">
      Level: <tspan id="level-percent">50</tspan>%
    </text>

    <!-- Volume Display -->
    <text x="30" y="340" font-family="Arial" font-size="12" fill="#555">
      Volume: <tspan id="current-volume">2500</tspan> gal
    </text>
    <text x="30" y="358" font-family="Arial" font-size="12" fill="#555">
      Capacity: <tspan id="max-capacity">5000</tspan> gal
    </text>

    <!-- Temperature -->
    <text x="170" y="340" font-family="Arial" font-size="12" fill="#555">
      Temp: <tspan id="temp-value">72</tspan>°F
    </text>

    <!-- Status -->
    <text x="150" y="378" font-family="Arial" font-size="12" text-anchor="middle" fill="#666">
      Status: <tspan id="tank-status" fill="#4caf50">NORMAL</tspan>
    </text>
  </g>

  <script><![CDATA[
//!export-start
let _pn_tankHeight = 200;
let _pn_tankTop = 70;
let _pn_tankBottom = 270;
let _ps_status = 'NORMAL';
let _ps_statusColor = '#4caf50';
//!export-end

function init() {
  update();
}

  <script><![CDATA[
//!export-start
let _pn_level = 65;      // Tank level (%)
let _pn_capacity = 1000; // Tank capacity (gallons)
let _pn_temperature = 72; // Temperature (°F)
let _ps_label = "Fuel Tank"; // Tank label
//!export-end

function init() { update(); }

function update() {
  const fillRect = document.getElementById('tankFill');
  const levelText = document.getElementById('levelText');
  const capacityText = document.getElementById('capacityText');
  const tempText = document.getElementById('tempText');
  const labelText = document.getElementById('tankLabel');
  if (!fillRect) return;
  const fillHeight = (_pn_level / 100) * 150;
  fillRect.setAttribute('height', fillHeight);
  fillRect.setAttribute('y', 150 - fillHeight);
  if (levelText) levelText.textContent = _pn_level + '%';
  if (capacityText) capacityText.textContent = Math.round(_pn_capacity * _pn_level / 100) + ' gal';
  if (tempText) tempText.textContent = _pn_temperature + '°F';
  if (labelText) labelText.textContent = _ps_label;
}

function putValue(id, value) {
  if (id === '_pn_level') _pn_level = Number(value) || 0;
  else if (id === '_pn_capacity') _pn_capacity = Number(value) || 0;
  else if (id === '_pn_temperature') _pn_temperature = Number(value) || 0;
  else if (id === '_ps_label') _ps_label = String(value);
  update();
}

init();
]]></script>
</svg>
