<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 380 420" width="380" height="420">
  <defs>
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#0f2027;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#203a43;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2c5364;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="panelGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#1a237e;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#283593;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1a237e;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="powerGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#f39c12;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#e74c3c;stop-opacity:1" />
    </linearGradient>
    <radialGradient id="sunGlow">
      <stop offset="0%" style="stop-color:#fff700;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#ffa500;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#ff8c00;stop-opacity:0.3" />
    </radialGradient>
    <filter id="glow">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
    <filter id="shadow">
      <feDropShadow dx="2" dy="2" stdDeviation="2" flood-opacity="0.5"/>
    </filter>
  </defs>

  <!-- Background -->
  <rect width="380" height="420" fill="url(#bgGradient)" rx="10"/>

  <!-- Title -->
  <text x="190" y="25" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#ecf0f1" text-anchor="middle">SOLAR PANEL MONITOR</text>

  <!-- Sun Icon with rays -->
  <g id="sunIcon" transform="translate(320, 50)">
    <circle cx="0" cy="0" r="25" fill="url(#sunGlow)" filter="url(#glow)"/>
    <g id="sunRays">
      <line x1="0" y1="-35" x2="0" y2="-30" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="25" y1="-25" x2="21" y2="-21" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="35" y1="0" x2="30" y2="0" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="25" y1="25" x2="21" y2="21" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="0" y1="35" x2="0" y2="30" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="-25" y1="25" x2="-21" y2="21" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="-35" y1="0" x2="-30" y2="0" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line x1="-25" y1="-25" x2="-21" y2="-21" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
    </g>
  </g>

  <!-- Solar Panel Graphic -->
  <g id="solarPanel" transform="translate(190, 110)">
    <rect x="-80" y="-40" width="160" height="80" fill="url(#panelGradient)" stroke="#5c6bc0" stroke-width="3" rx="5" filter="url(#shadow)"/>

    <!-- Panel cells -->
    <g id="panelCells">
      <rect x="-75" y="-35" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="-35" y="-35" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="5" y="-35" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="45" y="-35" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>

      <rect x="-75" y="5" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="-35" y="5" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="5" y="5" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
      <rect x="45" y="5" width="35" height="35" fill="none" stroke="#3f51b5" stroke-width="1.5"/>
    </g>

    <!-- Light rays hitting panel -->
    <g id="lightRays" opacity="0.6">
      <line id="ray1" x1="-60" y1="-60" x2="-50" y2="-40" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line id="ray2" x1="-20" y1="-60" x2="-10" y2="-40" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line id="ray3" x1="20" y1="-60" x2="30" y2="-40" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
      <line id="ray4" x1="60" y1="-60" x2="70" y2="-40" stroke="#ffa500" stroke-width="2" stroke-linecap="round"/>
    </g>
  </g>

  <!-- Power Output Display (Main) -->
  <rect x="20" y="170" width="340" height="70" fill="rgba(26, 26, 26, 0.9)" stroke="#7f8c8d" stroke-width="2" rx="8" filter="url(#shadow)"/>
  <text x="190" y="190" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">POWER OUTPUT</text>
  <text id="powerOutput" x="190" y="225" font-family="Arial" font-size="42" font-weight="bold" fill="url(#powerGradient)" text-anchor="middle" filter="url(#glow)">2.45 kW</text>

  <!-- Metrics Grid -->
  <g id="metricsGrid">
    <!-- Voltage -->
    <rect x="20" y="255" width="105" height="65" fill="rgba(44, 62, 80, 0.8)" stroke="#7f8c8d" stroke-width="2" rx="5"/>
    <text x="72.5" y="273" font-family="Arial" font-size="11" fill="#95a5a6" text-anchor="middle">VOLTAGE</text>
    <text id="voltage" x="72.5" y="298" font-family="Arial" font-size="24" font-weight="bold" fill="#3498db" text-anchor="middle">48.2 V</text>
    <text id="voltageStatus" x="72.5" y="313" font-family="Arial" font-size="9" fill="#27ae60" text-anchor="middle">OPTIMAL</text>

    <!-- Current -->
    <rect x="137.5" y="255" width="105" height="65" fill="rgba(44, 62, 80, 0.8)" stroke="#7f8c8d" stroke-width="2" rx="5"/>
    <text x="190" y="273" font-family="Arial" font-size="11" fill="#95a5a6" text-anchor="middle">CURRENT</text>
    <text id="current" x="190" y="298" font-family="Arial" font-size="24" font-weight="bold" fill="#9b59b6" text-anchor="middle">50.8 A</text>
    <text id="currentStatus" x="190" y="313" font-family="Arial" font-size="9" fill="#27ae60" text-anchor="middle">NORMAL</text>

    <!-- Panel Temperature -->
    <rect x="255" y="255" width="105" height="65" fill="rgba(44, 62, 80, 0.8)" stroke="#7f8c8d" stroke-width="2" rx="5"/>
    <text x="307.5" y="273" font-family="Arial" font-size="11" fill="#95a5a6" text-anchor="middle">PANEL TEMP</text>
    <text id="temperature" x="307.5" y="298" font-family="Arial" font-size="24" font-weight="bold" fill="#e67e22" text-anchor="middle">45.2°C</text>
    <text id="tempStatus" x="307.5" y="313" font-family="Arial" font-size="9" fill="#f39c12" text-anchor="middle">WARM</text>
  </g>

  <!-- Daily Energy Production -->
  <rect x="20" y="335" width="165" height="70" fill="rgba(26, 26, 26, 0.9)" stroke="#7f8c8d" stroke-width="2" rx="8"/>
  <text x="102.5" y="353" font-family="Arial" font-size="11" fill="#95a5a6" text-anchor="middle">TODAY'S ENERGY</text>
  <text id="dailyEnergy" x="102.5" y="382" font-family="Arial" font-size="28" font-weight="bold" fill="#27ae60" text-anchor="middle" filter="url(#glow)">18.5 kWh</text>
  <text id="dailyProgress" x="102.5" y="398" font-family="Arial" font-size="10" fill="#95a5a6" text-anchor="middle">Peak: 3.2 kW at 12:30</text>

  <!-- Efficiency Gauge -->
  <g id="efficiencyGauge" transform="translate(287.5, 370)">
    <rect x="-75" y="-35" width="150" height="70" fill="rgba(26, 26, 26, 0.9)" stroke="#7f8c8d" stroke-width="2" rx="8"/>
    <text x="0" y="-17" font-family="Arial" font-size="11" fill="#95a5a6" text-anchor="middle">EFFICIENCY</text>

    <!-- Circular gauge background -->
    <circle cx="0" cy="10" r="20" fill="none" stroke="#34495e" stroke-width="6"/>

    <!-- Efficiency arc -->
    <circle id="efficiencyArc" cx="0" cy="10" r="20" fill="none" stroke="#27ae60" stroke-width="6"
            stroke-dasharray="125.6" stroke-dashoffset="31.4"
            transform="rotate(-90 0 10)" stroke-linecap="round" filter="url(#glow)"/>

    <!-- Percentage text -->
    <text id="efficiencyValue" x="0" y="15" font-family="Arial" font-size="14" font-weight="bold" fill="#27ae60" text-anchor="middle">92%</text>
  </g>

  <script type="text/javascript">
    <![CDATA[
    (function() {
      // FUXA Variable Bindings
      var bindings = {
        powerOutput: 'solar.powerOutput',         // kW
        voltage: 'solar.voltage',                 // V
        current: 'solar.current',                 // A
        panelTemp: 'solar.panelTemp',             // Celsius
        dailyEnergy: 'solar.dailyEnergy',         // kWh
        peakPower: 'solar.peakPower',             // kW
        peakTime: 'solar.peakTime',               // HH:MM format
        efficiency: 'solar.efficiency',           // Percentage 0-100
        sunlightIntensity: 'solar.sunlightIntensity', // W/m² (0-1000)
        status: 'solar.status'                    // 0=offline, 1=online, 2=fault
      };

      var rayAnimationId = null;

      function updatePowerOutput(power) {
        var powerText = document.getElementById('powerOutput');
        if (powerText) {
          if (power >= 1000) {
            powerText.textContent = (power / 1000).toFixed(2) + ' kW';
          } else {
            powerText.textContent = power.toFixed(0) + ' W';
          }

          // Update color based on power level
          if (power < 100) {
            powerText.setAttribute('fill', '#95a5a6');
          } else if (power < 1000) {
            powerText.setAttribute('fill', '#3498db');
          } else if (power < 2000) {
            powerText.setAttribute('fill', '#27ae60');
          } else {
            powerText.setAttribute('fill', 'url(#powerGradient)');
          }
        }
      }

      function updateVoltage(voltage) {
        var voltageText = document.getElementById('voltage');
        var statusText = document.getElementById('voltageStatus');

        if (voltageText) {
          voltageText.textContent = voltage.toFixed(1) + ' V';
        }

        if (statusText) {
          if (voltage < 40) {
            statusText.textContent = 'LOW';
            statusText.setAttribute('fill', '#e74c3c');
          } else if (voltage > 55) {
            statusText.textContent = 'HIGH';
            statusText.setAttribute('fill', '#e74c3c');
          } else if (voltage >= 45 && voltage <= 50) {
            statusText.textContent = 'OPTIMAL';
            statusText.setAttribute('fill', '#27ae60');
          } else {
            statusText.textContent = 'NORMAL';
            statusText.setAttribute('fill', '#f39c12');
          }
        }
      }

      function updateCurrent(current) {
        var currentText = document.getElementById('current');
        var statusText = document.getElementById('currentStatus');

        if (currentText) {
          currentText.textContent = current.toFixed(1) + ' A';
        }

        if (statusText) {
          if (current > 60) {
            statusText.textContent = 'HIGH';
            statusText.setAttribute('fill', '#f39c12');
          } else if (current < 5) {
            statusText.textContent = 'LOW';
            statusText.setAttribute('fill', '#95a5a6');
          } else {
            statusText.textContent = 'NORMAL';
            statusText.setAttribute('fill', '#27ae60');
          }
        }
      }

      function updateTemperature(temp) {
        var tempText = document.getElementById('temperature');
        var statusText = document.getElementById('tempStatus');

        if (tempText) {
          tempText.textContent = temp.toFixed(1) + '°C';

          // Color based on temperature
          if (temp < 30) {
            tempText.setAttribute('fill', '#3498db');
          } else if (temp < 50) {
            tempText.setAttribute('fill', '#27ae60');
          } else if (temp < 70) {
            tempText.setAttribute('fill', '#f39c12');
          } else {
            tempText.setAttribute('fill', '#e74c3c');
          }
        }

        if (statusText) {
          if (temp < 25) {
            statusText.textContent = 'COOL';
            statusText.setAttribute('fill', '#3498db');
          } else if (temp < 45) {
            statusText.textContent = 'NORMAL';
            statusText.setAttribute('fill', '#27ae60');
          } else if (temp < 60) {
            statusText.textContent = 'WARM';
            statusText.setAttribute('fill', '#f39c12');
          } else if (temp < 75) {
            statusText.textContent = 'HOT';
            statusText.setAttribute('fill', '#e67e22');
          } else {
            statusText.textContent = 'CRITICAL';
            statusText.setAttribute('fill', '#e74c3c');
          }
        }
      }

      function updateDailyEnergy(energy, peakPower, peakTime) {
        var energyText = document.getElementById('dailyEnergy');
        if (energyText) {
          energyText.textContent = energy.toFixed(1) + ' kWh';
        }

        if (peakPower !== undefined && peakTime !== undefined) {
          var progressText = document.getElementById('dailyProgress');
          if (progressText) {
            progressText.textContent = 'Peak: ' + peakPower.toFixed(1) + ' kW at ' + peakTime;
          }
        }
      }

      function updateEfficiency(efficiency) {
        var efficiencyText = document.getElementById('efficiencyValue');
        var efficiencyArc = document.getElementById('efficiencyArc');

        if (efficiencyText) {
          var value = Math.max(0, Math.min(100, efficiency));
          efficiencyText.textContent = value.toFixed(0) + '%';

          // Color based on efficiency
          var color;
          if (value < 70) {
            color = '#e74c3c';
          } else if (value < 85) {
            color = '#f39c12';
          } else {
            color = '#27ae60';
          }

          efficiencyText.setAttribute('fill', color);

          if (efficiencyArc) {
            // Calculate stroke-dashoffset for the arc (circumference = 2πr = 125.6)
            var circumference = 125.6;
            var offset = circumference - (circumference * value / 100);
            efficiencyArc.setAttribute('stroke-dashoffset', offset);
            efficiencyArc.setAttribute('stroke', color);
          }
        }
      }

      function animateSunRays(intensity) {
        if (rayAnimationId) {
          cancelAnimationFrame(rayAnimationId);
        }

        var rays = document.querySelectorAll('#lightRays line');
        var lightRays = document.getElementById('lightRays');
        var sunRays = document.getElementById('sunRays');

        if (!lightRays || !sunRays) return;

        // Normalize intensity (0-1000 W/m²)
        var normalizedIntensity = Math.max(0, Math.min(1000, intensity)) / 1000;
        lightRays.setAttribute('opacity', normalizedIntensity);

        var angle = 0;

        function animate() {
          angle += 2;

          // Animate sun rays rotation
          sunRays.setAttribute('transform', 'rotate(' + angle + ')');

          // Animate light rays pulsing
          var pulse = 0.4 + (Math.sin(angle * Math.PI / 180) * 0.2);
          rays.forEach(function(ray) {
            ray.setAttribute('opacity', pulse * normalizedIntensity);
          });

          rayAnimationId = requestAnimationFrame(animate);
        }

        animate();
      }

      function updateSystemStatus(status) {
        var powerText = document.getElementById('powerOutput');

        if (!powerText) return;

        switch(status) {
          case 0: // Offline
            powerText.setAttribute('fill', '#95a5a6');
            if (rayAnimationId) {
              cancelAnimationFrame(rayAnimationId);
              rayAnimationId = null;
            }
            break;
          case 1: // Online
            // Normal operation - color set by power level
            break;
          case 2: // Fault
            powerText.setAttribute('fill', '#e74c3c');
            // Blink effect
            var blinkCount = 0;
            var blinkInterval = setInterval(function() {
              blinkCount++;
              var opacity = (blinkCount % 2 === 0) ? '1' : '0.3';
              powerText.setAttribute('opacity', opacity);
              if (blinkCount > 6) {
                clearInterval(blinkInterval);
                powerText.setAttribute('opacity', '1');
              }
            }, 300);
            break;
        }
      }

      // Main update function called by FUXA
      window.updateSolarPanel = function(values) {
        if (values.powerOutput !== undefined) {
          updatePowerOutput(values.powerOutput);
        }

        if (values.voltage !== undefined) {
          updateVoltage(values.voltage);
        }

        if (values.current !== undefined) {
          updateCurrent(values.current);
        }

        if (values.panelTemp !== undefined) {
          updateTemperature(values.panelTemp);
        }

        if (values.dailyEnergy !== undefined) {
          updateDailyEnergy(values.dailyEnergy, values.peakPower, values.peakTime);
        }

        if (values.efficiency !== undefined) {
          updateEfficiency(values.efficiency);
        }

        if (values.sunlightIntensity !== undefined) {
          animateSunRays(values.sunlightIntensity);
        }

        if (values.status !== undefined) {
          updateSystemStatus(values.status);
        }
      };

      // Initialize
      updatePowerOutput(2450);
      updateVoltage(48.2);
      updateCurrent(50.8);
      updateTemperature(45.2);
      updateDailyEnergy(18.5, 3.2, '12:30');
      updateEfficiency(92);
      animateSunRays(850);

      // Expose bindings for FUXA
      window.solarPanelBindings = bindings;
    })();
    ]]>
  </script>
</svg>
