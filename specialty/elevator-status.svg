<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 400" width="300" height="400">
  <defs>
    <linearGradient id="elevatorBg" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#2c3e50;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#34495e;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="cabinGradient" x1="0%" y1="0%" x2="0%" y2="100%">
      <stop offset="0%" style="stop-color:#3498db;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2980b9;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="doorGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#95a5a6;stop-opacity:1" />
      <stop offset="50%" style="stop-color:#bdc3c7;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#95a5a6;stop-opacity:1" />
    </linearGradient>
    <filter id="glow">
      <feGaussianBlur stdDeviation="2" result="coloredBlur"/>
      <feMerge>
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>

  <!-- Background -->
  <rect width="300" height="400" fill="url(#elevatorBg)" rx="10"/>

  <!-- Title -->
  <text x="150" y="25" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#ecf0f1" text-anchor="middle">ELEVATOR STATUS</text>

  <!-- Elevator Shaft -->
  <rect x="50" y="50" width="200" height="250" fill="#1a1a1a" stroke="#7f8c8d" stroke-width="2" rx="5"/>

  <!-- Floor Indicators -->
  <g id="floorIndicators">
    <rect id="floor10" x="60" y="60" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="75" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">10</text>

    <rect id="floor9" x="60" y="85" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="100" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">9</text>

    <rect id="floor8" x="60" y="110" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="125" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">8</text>

    <rect id="floor7" x="60" y="135" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="150" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">7</text>

    <rect id="floor6" x="60" y="160" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="175" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">6</text>

    <rect id="floor5" x="60" y="185" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="200" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">5</text>

    <rect id="floor4" x="60" y="210" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="225" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">4</text>

    <rect id="floor3" x="60" y="235" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="250" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">3</text>

    <rect id="floor2" x="60" y="260" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="275" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">2</text>

    <rect id="floor1" x="60" y="285" width="30" height="20" fill="#2c3e50" stroke="#7f8c8d" stroke-width="1" rx="2"/>
    <text x="75" y="300" font-family="Arial" font-size="12" fill="#95a5a6" text-anchor="middle">1</text>
  </g>

  <!-- Elevator Cabin -->
  <g id="cabin" transform="translate(0, 235)">
    <rect x="100" y="50" width="140" height="40" fill="url(#cabinGradient)" stroke="#2980b9" stroke-width="2" rx="3"/>

    <!-- Door Left -->
    <rect id="doorLeft" x="100" y="50" width="70" height="40" fill="url(#doorGradient)" stroke="#7f8c8d" stroke-width="1"/>
    <line x1="135" y1="55" x2="135" y2="85" stroke="#7f8c8d" stroke-width="1"/>

    <!-- Door Right -->
    <rect id="doorRight" x="170" y="50" width="70" height="40" fill="url(#doorGradient)" stroke="#7f8c8d" stroke-width="1"/>
    <line x1="205" y1="55" x2="205" y2="85" stroke="#7f8c8d" stroke-width="1"/>
  </g>

  <!-- Direction Indicator -->
  <g id="directionIndicator">
    <!-- Up Arrow -->
    <polygon id="upArrow" points="270,80 280,95 260,95" fill="#95a5a6" opacity="0.3"/>
    <!-- Down Arrow -->
    <polygon id="downArrow" points="270,115 280,100 260,100" fill="#95a5a6" opacity="0.3"/>
  </g>

  <!-- Current Floor Display -->
  <rect x="95" y="315" width="110" height="50" fill="#1a1a1a" stroke="#7f8c8d" stroke-width="2" rx="5"/>
  <text x="150" y="340" font-family="Arial" font-size="14" fill="#95a5a6" text-anchor="middle">FLOOR</text>
  <text id="currentFloor" x="150" y="358" font-family="Arial" font-size="28" font-weight="bold" fill="#3498db" text-anchor="middle" filter="url(#glow)">1</text>

  <!-- Status Indicators -->
  <g id="statusPanel">
    <!-- Door Status -->
    <rect x="20" y="320" width="60" height="35" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <text x="50" y="333" font-family="Arial" font-size="9" fill="#95a5a6" text-anchor="middle">DOOR</text>
    <text id="doorStatus" x="50" y="348" font-family="Arial" font-size="11" font-weight="bold" fill="#27ae60" text-anchor="middle">CLOSED</text>

    <!-- Occupancy -->
    <rect x="220" y="320" width="60" height="35" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <text x="250" y="333" font-family="Arial" font-size="9" fill="#95a5a6" text-anchor="middle">LOAD</text>
    <text id="occupancy" x="250" y="348" font-family="Arial" font-size="11" font-weight="bold" fill="#3498db" text-anchor="middle">0%</text>

    <!-- Service Mode -->
    <rect x="20" y="365" width="60" height="25" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <circle id="serviceLight" cx="35" cy="377.5" r="6" fill="#95a5a6" opacity="0.3"/>
    <text x="55" y="382" font-family="Arial" font-size="10" fill="#95a5a6" text-anchor="middle">SERVICE</text>

    <!-- Emergency -->
    <rect x="90" y="365" width="60" height="25" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <circle id="emergencyLight" cx="105" cy="377.5" r="6" fill="#e74c3c" opacity="0.3"/>
    <text x="130" y="382" font-family="Arial" font-size="10" fill="#95a5a6" text-anchor="middle">ALARM</text>

    <!-- Maintenance -->
    <rect x="160" y="365" width="60" height="25" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <circle id="maintenanceLight" cx="175" cy="377.5" r="6" fill="#f39c12" opacity="0.3"/>
    <text x="197" y="382" font-family="Arial" font-size="10" fill="#95a5a6" text-anchor="middle">MAINT</text>

    <!-- Moving -->
    <rect x="230" y="365" width="50" height="25" fill="#34495e" stroke="#7f8c8d" stroke-width="1" rx="3"/>
    <circle id="movingLight" cx="243" cy="377.5" r="6" fill="#3498db" opacity="0.3"/>
    <text x="262" y="382" font-family="Arial" font-size="10" fill="#95a5a6" text-anchor="middle">MOVE</text>
  </g>

  <script type="text/javascript">
    <![CDATA[
    (function() {
      // FUXA Variable Bindings
      var bindings = {
        currentFloor: 'elevator.currentFloor',      // Range: 1-10
        targetFloor: 'elevator.targetFloor',        // Range: 1-10
        direction: 'elevator.direction',            // 0=idle, 1=up, -1=down
        doorStatus: 'elevator.doorStatus',          // 0=closed, 1=opening, 2=open, 3=closing
        occupancy: 'elevator.occupancy',            // 0-100 (percentage)
        serviceMode: 'elevator.serviceMode',        // 0=normal, 1=service
        emergency: 'elevator.emergency',            // 0=normal, 1=alarm
        maintenance: 'elevator.maintenance',        // 0=normal, 1=maintenance
        moving: 'elevator.moving'                   // 0=stopped, 1=moving
      };

      var currentFloorValue = 1;
      var doorPosition = 0; // 0=closed, 1=open
      var animationFrame = null;

      function updateFloorIndicators(floor) {
        for (var i = 1; i <= 10; i++) {
          var floorRect = document.getElementById('floor' + i);
          if (floorRect) {
            if (i === floor) {
              floorRect.setAttribute('fill', '#27ae60');
              floorRect.setAttribute('filter', 'url(#glow)');
            } else {
              floorRect.setAttribute('fill', '#2c3e50');
              floorRect.removeAttribute('filter');
            }
          }
        }
      }

      function updateCabinPosition(floor) {
        var cabin = document.getElementById('cabin');
        if (cabin) {
          // Map floor 1-10 to Y position (285 to 60)
          var yPos = 285 - ((floor - 1) * 25);
          cabin.setAttribute('transform', 'translate(0, ' + yPos + ')');
        }
      }

      function updateDirection(direction) {
        var upArrow = document.getElementById('upArrow');
        var downArrow = document.getElementById('downArrow');

        if (upArrow && downArrow) {
          if (direction === 1) {
            upArrow.setAttribute('fill', '#27ae60');
            upArrow.setAttribute('opacity', '1');
            upArrow.setAttribute('filter', 'url(#glow)');
            downArrow.setAttribute('fill', '#95a5a6');
            downArrow.setAttribute('opacity', '0.3');
            downArrow.removeAttribute('filter');
          } else if (direction === -1) {
            downArrow.setAttribute('fill', '#e74c3c');
            downArrow.setAttribute('opacity', '1');
            downArrow.setAttribute('filter', 'url(#glow)');
            upArrow.setAttribute('fill', '#95a5a6');
            upArrow.setAttribute('opacity', '0.3');
            upArrow.removeAttribute('filter');
          } else {
            upArrow.setAttribute('fill', '#95a5a6');
            upArrow.setAttribute('opacity', '0.3');
            upArrow.removeAttribute('filter');
            downArrow.setAttribute('fill', '#95a5a6');
            downArrow.setAttribute('opacity', '0.3');
            downArrow.removeAttribute('filter');
          }
        }
      }

      function animateDoors(status) {
        var doorLeft = document.getElementById('doorLeft');
        var doorRight = document.getElementById('doorRight');
        var doorStatusText = document.getElementById('doorStatus');

        if (!doorLeft || !doorRight || !doorStatusText) return;

        var targetPosition = 0;
        var statusText = 'CLOSED';
        var statusColor = '#27ae60';

        switch(status) {
          case 0: // closed
            targetPosition = 0;
            statusText = 'CLOSED';
            statusColor = '#27ae60';
            break;
          case 1: // opening
            targetPosition = doorPosition + 0.02;
            if (targetPosition > 1) targetPosition = 1;
            statusText = 'OPENING';
            statusColor = '#f39c12';
            break;
          case 2: // open
            targetPosition = 1;
            statusText = 'OPEN';
            statusColor = '#3498db';
            break;
          case 3: // closing
            targetPosition = doorPosition - 0.02;
            if (targetPosition < 0) targetPosition = 0;
            statusText = 'CLOSING';
            statusColor = '#f39c12';
            break;
        }

        doorPosition = targetPosition;

        // Animate door positions
        var leftOffset = -doorPosition * 35;
        var rightOffset = doorPosition * 35;

        doorLeft.setAttribute('transform', 'translate(' + leftOffset + ', 0)');
        doorRight.setAttribute('transform', 'translate(' + rightOffset + ', 0)');

        doorStatusText.textContent = statusText;
        doorStatusText.setAttribute('fill', statusColor);

        if (status === 1 || status === 3) {
          animationFrame = requestAnimationFrame(function() { animateDoors(status); });
        }
      }

      function updateOccupancy(value) {
        var occupancyText = document.getElementById('occupancy');
        if (occupancyText) {
          var percent = Math.min(100, Math.max(0, value));
          occupancyText.textContent = percent.toFixed(0) + '%';

          if (percent > 90) {
            occupancyText.setAttribute('fill', '#e74c3c');
          } else if (percent > 75) {
            occupancyText.setAttribute('fill', '#f39c12');
          } else {
            occupancyText.setAttribute('fill', '#3498db');
          }
        }
      }

      function updateIndicatorLight(lightId, active) {
        var light = document.getElementById(lightId);
        if (light) {
          if (active) {
            light.setAttribute('opacity', '1');
            light.setAttribute('filter', 'url(#glow)');
          } else {
            light.setAttribute('opacity', '0.3');
            light.removeAttribute('filter');
          }
        }
      }

      // Main update function called by FUXA
      window.updateElevatorStatus = function(values) {
        if (values.currentFloor !== undefined && values.currentFloor !== currentFloorValue) {
          currentFloorValue = values.currentFloor;
          var floorText = document.getElementById('currentFloor');
          if (floorText) {
            floorText.textContent = currentFloorValue;
          }
          updateFloorIndicators(currentFloorValue);
          updateCabinPosition(currentFloorValue);
        }

        if (values.direction !== undefined) {
          updateDirection(values.direction);
        }

        if (values.doorStatus !== undefined) {
          if (animationFrame) {
            cancelAnimationFrame(animationFrame);
          }
          animateDoors(values.doorStatus);
        }

        if (values.occupancy !== undefined) {
          updateOccupancy(values.occupancy);
        }

        if (values.serviceMode !== undefined) {
          updateIndicatorLight('serviceLight', values.serviceMode === 1);
        }

        if (values.emergency !== undefined) {
          updateIndicatorLight('emergencyLight', values.emergency === 1);
        }

        if (values.maintenance !== undefined) {
          updateIndicatorLight('maintenanceLight', values.maintenance === 1);
        }

        if (values.moving !== undefined) {
          updateIndicatorLight('movingLight', values.moving === 1);
        }
      };

      // Initialize
      updateFloorIndicators(1);
      updateCabinPosition(1);
      updateDirection(0);
      animateDoors(0);
      updateOccupancy(0);

      // Expose bindings for FUXA
      window.elevatorBindings = bindings;
    })();
    ]]>
  </script>
</svg>
